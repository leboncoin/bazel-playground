load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_source", "go_test")

package(default_visibility = ["//:__subpackages__"])

genrule(
    name = "gen",
    outs = ["gen.go"],
    cmd = """
cat <<EOF > "$@"
package testb

import "github.com/leboncoin/bazel-playground/otherlib"

func FromGeneratedFile() {
	otherlib.Foo()
}
EOF
""",
)

go_source(
    name = "srcs",
    srcs = [
        "src.go",  # A Go source file for package testb
        ":gen",  # A generated Go file for package testb
    ],
    deps = ["//otherlib"],  # A simple Go library dependency
)

#
# Test with a Go test embedding our `go_source` rule target +
#  the default library of the test to infer the importpath.
#

go_library(
    name = "testb",
    srcs = ["testb.go"],
    importpath = "github.com/leboncoin/bazel-playground/testb",
)

go_test(
    name = "testb_test",
    srcs = ["testb_test.go"],
    embed = [
        ":testb",
        ":srcs",  # Our `go_source` rule target
    ],
)
